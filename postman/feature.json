{
  "info": {
    "_postman_id": "2727ee6b-c606-49ec-9d4b-549c21dbe7af",
    "name": "feature_comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "23073146"
  },
  "item": [
    {
      "name": "Комментарии к событиям",
      "item": [
        {
          "name": "Успешные операции",
          "item": [
            {
              "name": "Добавление комментария",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r",
                      "\r",
                      "const source = JSON.parse(pm.request.body.raw);\r",
                      "const target = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Ответ должен содержать поля: id, createDate, text, authorId, lastUpdatedOn\", function () {\r",
                      "    pm.expect(target).to.have.property('id');\r",
                      "    pm.expect(target).to.have.property('text');\r",
                      "    pm.expect(target).to.have.property('authorId');\r",
                      "    pm.expect(target).to.have.property('createDate');\r",
                      "    pm.expect(target).to.have.property('lastUpdatedOn');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
                      "    pm.expect(target.id).to.not.be.null;\r",
                      "    pm.expect(source.text).equal(target.text);\r",
                      "    pm.expect(target.authorId).equal(2);\r",
                      "});\r"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"Comment for event from user\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Получение комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
                      "    pm.response.to.be.ok;\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "})\r"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Обновление комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
                      "    pm.response.to.be.ok;\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "}); \r",
                      "const source = JSON.parse(pm.request.body.raw);\r",
                      "const target = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Ответ должен содержать поля: id, createDate, text, authorId, lastUpdatedOn\", function () {\r",
                      "    pm.expect(target).to.have.property('id');\r",
                      "    pm.expect(target).to.have.property('text');\r",
                      "    pm.expect(target).to.have.property('authorId');\r",
                      "    pm.expect(target).to.have.property('createDate');\r",
                      "    pm.expect(target).to.have.property('lastUpdatedOn');\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
                      "    pm.expect(target.id).to.not.be.null;\r",
                      "    pm.expect(source.text).equal(target.text);\r",
                      "    pm.expect(target.id).equal(1);\r",
                      "    pm.expect(target.authorId).equal(2);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"Update Comment for event 1 from user 2\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Получение обновленного комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
                      "    pm.response.to.be.ok;\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "})\r"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Добавление комментария к событию",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"Comment for event  from user \"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "6"
                    },
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Добавление комментария, который потом удалит админ",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"Comment with uncensored text\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "6"
                    },
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Получение комментариев события",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.be.ok;\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r",
                      "\r",
                      "const target = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Ответ должен быть массивом\", function () {\r",
                      "    pm.expect(target).is.an('array');\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/comments/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Получение событий с количеством комментариев",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.be.ok;\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r",
                      "\r",
                      "const source = pm.collectionVariables.get('response');\r",
                      "const target = pm.response.json()[0];\r",
                      "\r",
                      "pm.test(\"Событие должно содержать поля: id, title, annotation, category, paid, eventDate, initiator, views, confirmedRequests, comments\", function () {\r",
                      "    pm.expect(target).to.have.property('id');\r",
                      "    pm.expect(target).to.have.property('title');\r",
                      "    pm.expect(target).to.have.property('annotation');\r",
                      "    pm.expect(target).to.have.property('category');\r",
                      "    pm.expect(target).to.have.property('paid');\r",
                      "    pm.expect(target).to.have.property('eventDate');\r",
                      "    pm.expect(target).to.have.property('initiator');\r",
                      "    pm.expect(target).to.have.property('views');\r",
                      "    pm.expect(target).to.have.property('confirmedRequests');\r",
                      "    pm.expect(target).to.have.property('comments');\r",
                      "});\r",
                      "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
                      "    pm.expect(target.comments).to.not.be.null;\r",
                      "    pm.expect(target.comments).equal(3);\r",
                      "});\r"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "events"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Получение комментариев события, пустой лист",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.be.ok;\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/comments/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Удаление комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "6"
                    },
                    {
                      "key": "commentId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Удаление комментария админом",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/admin/comments/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "comments",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "commentId",
                      "value": "3"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Операции с невалидными данными",
          "item": [
            {
              "name": "Добавление комментария c пустым текстом",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"  \"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "3"
                    },
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Добавление комментария неопубликованному событию",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"привет\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Добавление комментария c текстом длиной более 1000 символов",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "});\r"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"Lorem Ipsum - это текст - рыба, часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной рыбой для текстов на латинице с начала XVI века. В то время некий безымянный печатник создал большую коллекцию размеров и форм шрифтов, используя Lorem Ipsum для распечатки образцов. Lorem Ipsum не только успешно пережил без заметных изменений пять веков, но и перешагнул в электронный дизайн. Его популяризации в новое время послужили публикация листов Letraset с образцами Lorem Ipsum в 60-х годах и, в более недавнее время, программы электронной вёрстки типа Aldus PageMaker, в шаблонах которых используется Lorem Ipsum. Есть много вариантов Lorem Ipsum, но большинство из них имеет не всегда приемлемые модификации, например, юмористические вставки или слова, которые даже отдалённо не напоминают латынь. Если вам нужен Lorem Ipsum для серьёзного проекта, вы наверняка не хотите какой-нибудь шутки, скрытой в середине абзаца. Также все другие известные генераторы Lorem Ipsum используют один и тот же текст, который они просто повторяют, пока не достигнут нужный объём.\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "3"
                    },
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Обновление комментария пустой текст",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(400); \r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "}); "
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\":\"\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    },
                    {
                      "key": "commentId",
                      "value": "12"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Обновление комментария текст длиной более 1000 символов",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
                      "    pm.response.to.have.status(400); \r",
                      "    pm.response.to.be.withBody;\r",
                      "    pm.response.to.be.json;\r",
                      "}); "
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"text\": \"Lorem Ipsum - это текст - рыба, часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной рыбой для текстов на латинице с начала XVI века. В то время некий безымянный печатник создал большую коллекцию размеров и форм шрифтов, используя Lorem Ipsum для распечатки образцов. Lorem Ipsum не только успешно пережил без заметных изменений пять веков, но и перешагнул в электронный дизайн. Его популяризации в новое время послужили публикация листов Letraset с образцами Lorem Ipsum в 60-х годах и, в более недавнее время, программы электронной вёрстки типа Aldus PageMaker, в шаблонах которых используется Lorem Ipsum. Есть много вариантов Lorem Ipsum, но большинство из них имеет не всегда приемлемые модификации, например, юмористические вставки или слова, которые даже отдалённо не напоминают латынь. Если вам нужен Lorem Ipsum для серьёзного проекта, вы наверняка не хотите какой-нибудь шутки, скрытой в середине абзаца. Также все другие известные генераторы Lorem Ipsum используют один и тот же текст, который они просто повторяют, пока не достигнут нужный объём.\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "3"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Удаление комментария пользователь не автор комментария",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Ответ должен содержать код статуса 400\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "comments",
                    "users",
                    ":userId",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "3"
                    },
                    {
                      "key": "commentId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Операции с несуществующими данными",
      "item": [
        {
          "name": "Получение списка комментариев несуществующего события",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/comments/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "comments",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "eventId",
                  "value": "2222"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение комментария несуществующего пользователя",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const body = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
                  "    pm.response.to.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "})\r"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "comments",
                "users",
                ":userId",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "30000"
                },
                {
                  "key": "commentId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Получение несуществующего комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const body = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function() {\r",
                  "    pm.response.to.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "})\r"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "comments",
                "users",
                ":userId",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                },
                {
                  "key": "commentId",
                  "value": "2000"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление несуществующего комментария",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "comments",
                "users",
                ":userId",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "6"
                },
                {
                  "key": "commentId",
                  "value": "100"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Удаление комментария несуществующего пользователя",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/comments/users/:userId/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "comments",
                "users",
                ":userId",
                ":commentId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "600"
                },
                {
                  "key": "commentId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление комментария к несуществующему событию",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"text\": \"привет\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "comments",
                "users",
                ":userId",
                "events",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                },
                {
                  "key": "eventId",
                  "value": "2222"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление комментария от несуществующего пользователя",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"text\": \"привет\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/comments/users/:userId/events/:eventId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "comments",
                "users",
                ":userId",
                "events",
                ":eventId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "12000"
                },
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": " http://localhost:8080"
    },
    {
      "key": "Event ID",
      "value": "{(eid)}"
    },
    {
      "key": "eid",
      "value": "eid"
    },
    {
      "key": "uid",
      "value": "uid"
    }
  ]
}
